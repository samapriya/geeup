{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"geeup: Simple CLI for Earth Engine Uploads \u00b6 This tool came of the simple need to handle batch uploads of both image assets to collections but also thanks to the new table feature the possibility of batch uploading shapefiles into a folder. Though a lot of these tools including batch image uploader is part of my other project geeadd which also includes additional features to add to the python CLI, this tool was designed to be minimal so as to allow the user to simply query their quota, upload images or tables and also to query ongoing tasks and delete assets. I am hoping this tool with a simple objective proves useful to a few users of Google Earth Engine. -If you find this tool useful, star and cite it as below If you find this tool useful, star and cite it as below to show your support Samapriya Roy. (2022). samapriya/geeup: geeup: Simple CLI for Earth Engine Uploads (0.5.4). Zenodo. https://doi.org/10.5281/zenodo.6571151","title":"Introduction"},{"location":"#geeup-simple-cli-for-earth-engine-uploads","text":"This tool came of the simple need to handle batch uploads of both image assets to collections but also thanks to the new table feature the possibility of batch uploading shapefiles into a folder. Though a lot of these tools including batch image uploader is part of my other project geeadd which also includes additional features to add to the python CLI, this tool was designed to be minimal so as to allow the user to simply query their quota, upload images or tables and also to query ongoing tasks and delete assets. I am hoping this tool with a simple objective proves useful to a few users of Google Earth Engine. -If you find this tool useful, star and cite it as below If you find this tool useful, star and cite it as below to show your support Samapriya Roy. (2022). samapriya/geeup: geeup: Simple CLI for Earth Engine Uploads (0.5.4). Zenodo. https://doi.org/10.5281/zenodo.6571151","title":"geeup: Simple CLI for Earth Engine Uploads"},{"location":"changelog/","text":"Changelog \u00b6 0.5.8 \u00b6 Adding dependency on GDAL again to handle custom geotiffs correctly. Added back rename tool and improvements made in v0.5.6 Updated language to notify users of images in a collection or tables in a folder 0.5.7 \u00b6 Getmeta tool now generates crs and bounding box 0.5.6 \u00b6 Removed dependency on GDAL 0.5.5 \u00b6 Made sure table and image upload use the term associated tasks geeup tasks now uses updateTime to prevent key error for RUNNING tasks zipshape tool can now create the export directory if it does not exist 0.5.4 \u00b6 Major version improvements to performance and codebase Added rename tool to allow file renaming to EE rules Added natural sorting to sort filenames to be ingested Added capability for image and table upload to check for both existing assets and assets in task queue before retrying Added task check capability to avoid 3000 tasks in queue Updated and optimized failure checks and logging Added path and asset schema check for EE rulesets Updated docs and readme 0.5.3 \u00b6 Major version removed selenium support as stable method Overall improvements to performance and codebase Updated docs and ReadMe 0.5.2 \u00b6 Fixed GDAL check for package 0.5.1 \u00b6 Now support both zipped shapefile as well as batch CSV upload General Improvements 0.5.0 \u00b6 fixed typo in version check v0.4.9 \u00b6 Improvements to redundancy in code Improvements to version check for tool General cleanup v0.4.8 \u00b6 Fixed issue with epoch time conversion for 1970s and issue with second vs millisecond parsing v0.4.7 \u00b6 Both table and image upload support using cookies and better error handling. Improved zipshape tool to avoid error handling Image upload to collection now support pyramiding policy Cookie setup tool now auto enables long string for Linux v0.4.6 \u00b6 Now pass cookies for authentication and image and table uploaders. Added readme docs and feature to the tool Minor improvements to the overall tool. v0.4.5 \u00b6 Replaced firefox_options with options for selenium 3.14 and higher related to issue 24 for selsetup updated earthengine-api requirement to 0.1.238 update tasks fetch from earthengine api v0.4.4 \u00b6 Replaced firefox_options with options for selenium 3.14 and higher related to issue 24 v0.4.3 \u00b6 Updated quota tool to handle Google Cloud Projects in GEE v0.4.2 \u00b6 Fixed issue with geckodriver path and better path parsing Added CI check for geckodriver v0.4.1 \u00b6 Fixed selenium parser issue Issue 19 Implemented Cloud API fix for table uploads Improved Cloud API fix for Imagery upload with improved manifest handling Improvement and code cleanup v0.4.0 \u00b6 Updated earthengine API library requirements to 0.1.222 Added version check tool for auto version check with PyPI v0.3.7 \u00b6 Revisions to account for changes to API and client library 0.1.215 Now checks vertex count for each shapefile and logs warning with those exceeding million vertices while zipping. Uses table manifest to perform table uploads designed to be more robust. Simpler recursive delete functionality. Overall General improvements. v0.3.5-v0.3.6 \u00b6 Fixed downloader for pipwin for release >= 0.4.8 Improved overall package installation for windows Check pipwin import version to get release 0.4.9 v0.3.4 \u00b6 Supports python3 only since v0.3.4 Added stackoverflow based auth fix for some users Issue 13 and Issue 16 . General improvements. v0.3.3 \u00b6 Added fix for handling no data in manifests while uploading. v0.3.2 \u00b6 Fixed issue with selsetup. v0.3.1 \u00b6 Fixed issue with raw_input and input for selsetup. Fixed selenium path for windows and other platforms. General improvements to ReadMe v0.3.0 \u00b6 Fixed (issue 13)[ https://github.com/samapriya/geeup/issues/13 ] non relative import. Fixed issues with package import. v0.2.9 \u00b6 Fixed issues caused by --no-use_cloud_api in earthengine-api package v0.2.7 \u00b6 Fix to handle case senstive platform type for all os Fix to Issue 11 v0.2.6 \u00b6 Fixed geckodriver path to handle macos Fix to Issue 10 v0.2.5 \u00b6 Now allows for downloading geckodriver for macos Fix to Issue 10 Now includes a metadata tool to generate a generalized metadata for any raster to allow upload. Fix to Issue 7 Changed from geeup update to init to signify initialization Added selsetup this tool allows for setting up the gecko driver with your account incase there are issues uploading Better error handling for selenium driver download v0.2.4 \u00b6 Made general improvements Better error handling for selenium driver download v0.2.2 \u00b6 Can now handle generalized metadata (metadata is now required field) Fixed issues with table upload Overall code optimization and handle streaming upload v0.1.9 \u00b6 Changes to handle PyDL installation for Py2 and Py3 Removed Planet uploader to make tool more generalized v0.1.8 \u00b6 Multipart encoder using requests toolbelt for streaming upload Changed manifest upload methodology to match changes in earthengine-api v0.1.6 \u00b6 Fixed issue with module locations v0.1.5 \u00b6 Fixed issue with gecko driver paths Fixed issue with null uploads using task, switched to ee CLI upload v0.1.4 \u00b6 OS based geckdriver path fix General improvements v0.1.3 \u00b6 fixed issues with extra arguments Upload issue resolved General dependency v0.1.1 \u00b6 fixed dependency issues Upload post issues resolved Removed dependency on poster for now v0.0.9 \u00b6 fixed attribution and dependecy issues Included poster to improve streaming uploads All uploads now use selenium v0.0.8 \u00b6 fixed issues with unused imports v0.0.7 \u00b6 fixed issues with manifest lib v0.0.6 \u00b6 Detailed quota readout Uses selenium based uploader to upload images Avoids issues with python auth for upload v0.0.5 \u00b6 Removed unnecessary library imports Minor improvements and updated readme v0.0.4 \u00b6 Improved valid table name check before upload Improvements to earth engine quota tool for more accurate quota and human readable","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#058","text":"Adding dependency on GDAL again to handle custom geotiffs correctly. Added back rename tool and improvements made in v0.5.6 Updated language to notify users of images in a collection or tables in a folder","title":"0.5.8"},{"location":"changelog/#057","text":"Getmeta tool now generates crs and bounding box","title":"0.5.7"},{"location":"changelog/#056","text":"Removed dependency on GDAL","title":"0.5.6"},{"location":"changelog/#055","text":"Made sure table and image upload use the term associated tasks geeup tasks now uses updateTime to prevent key error for RUNNING tasks zipshape tool can now create the export directory if it does not exist","title":"0.5.5"},{"location":"changelog/#054","text":"Major version improvements to performance and codebase Added rename tool to allow file renaming to EE rules Added natural sorting to sort filenames to be ingested Added capability for image and table upload to check for both existing assets and assets in task queue before retrying Added task check capability to avoid 3000 tasks in queue Updated and optimized failure checks and logging Added path and asset schema check for EE rulesets Updated docs and readme","title":"0.5.4"},{"location":"changelog/#053","text":"Major version removed selenium support as stable method Overall improvements to performance and codebase Updated docs and ReadMe","title":"0.5.3"},{"location":"changelog/#052","text":"Fixed GDAL check for package","title":"0.5.2"},{"location":"changelog/#051","text":"Now support both zipped shapefile as well as batch CSV upload General Improvements","title":"0.5.1"},{"location":"changelog/#050","text":"fixed typo in version check","title":"0.5.0"},{"location":"changelog/#v049","text":"Improvements to redundancy in code Improvements to version check for tool General cleanup","title":"v0.4.9"},{"location":"changelog/#v048","text":"Fixed issue with epoch time conversion for 1970s and issue with second vs millisecond parsing","title":"v0.4.8"},{"location":"changelog/#v047","text":"Both table and image upload support using cookies and better error handling. Improved zipshape tool to avoid error handling Image upload to collection now support pyramiding policy Cookie setup tool now auto enables long string for Linux","title":"v0.4.7"},{"location":"changelog/#v046","text":"Now pass cookies for authentication and image and table uploaders. Added readme docs and feature to the tool Minor improvements to the overall tool.","title":"v0.4.6"},{"location":"changelog/#v045","text":"Replaced firefox_options with options for selenium 3.14 and higher related to issue 24 for selsetup updated earthengine-api requirement to 0.1.238 update tasks fetch from earthengine api","title":"v0.4.5"},{"location":"changelog/#v044","text":"Replaced firefox_options with options for selenium 3.14 and higher related to issue 24","title":"v0.4.4"},{"location":"changelog/#v043","text":"Updated quota tool to handle Google Cloud Projects in GEE","title":"v0.4.3"},{"location":"changelog/#v042","text":"Fixed issue with geckodriver path and better path parsing Added CI check for geckodriver","title":"v0.4.2"},{"location":"changelog/#v041","text":"Fixed selenium parser issue Issue 19 Implemented Cloud API fix for table uploads Improved Cloud API fix for Imagery upload with improved manifest handling Improvement and code cleanup","title":"v0.4.1"},{"location":"changelog/#v040","text":"Updated earthengine API library requirements to 0.1.222 Added version check tool for auto version check with PyPI","title":"v0.4.0"},{"location":"changelog/#v037","text":"Revisions to account for changes to API and client library 0.1.215 Now checks vertex count for each shapefile and logs warning with those exceeding million vertices while zipping. Uses table manifest to perform table uploads designed to be more robust. Simpler recursive delete functionality. Overall General improvements.","title":"v0.3.7"},{"location":"changelog/#v035-v036","text":"Fixed downloader for pipwin for release >= 0.4.8 Improved overall package installation for windows Check pipwin import version to get release 0.4.9","title":"v0.3.5-v0.3.6"},{"location":"changelog/#v034","text":"Supports python3 only since v0.3.4 Added stackoverflow based auth fix for some users Issue 13 and Issue 16 . General improvements.","title":"v0.3.4"},{"location":"changelog/#v033","text":"Added fix for handling no data in manifests while uploading.","title":"v0.3.3"},{"location":"changelog/#v032","text":"Fixed issue with selsetup.","title":"v0.3.2"},{"location":"changelog/#v031","text":"Fixed issue with raw_input and input for selsetup. Fixed selenium path for windows and other platforms. General improvements to ReadMe","title":"v0.3.1"},{"location":"changelog/#v030","text":"Fixed (issue 13)[ https://github.com/samapriya/geeup/issues/13 ] non relative import. Fixed issues with package import.","title":"v0.3.0"},{"location":"changelog/#v029","text":"Fixed issues caused by --no-use_cloud_api in earthengine-api package","title":"v0.2.9"},{"location":"changelog/#v027","text":"Fix to handle case senstive platform type for all os Fix to Issue 11","title":"v0.2.7"},{"location":"changelog/#v026","text":"Fixed geckodriver path to handle macos Fix to Issue 10","title":"v0.2.6"},{"location":"changelog/#v025","text":"Now allows for downloading geckodriver for macos Fix to Issue 10 Now includes a metadata tool to generate a generalized metadata for any raster to allow upload. Fix to Issue 7 Changed from geeup update to init to signify initialization Added selsetup this tool allows for setting up the gecko driver with your account incase there are issues uploading Better error handling for selenium driver download","title":"v0.2.5"},{"location":"changelog/#v024","text":"Made general improvements Better error handling for selenium driver download","title":"v0.2.4"},{"location":"changelog/#v022","text":"Can now handle generalized metadata (metadata is now required field) Fixed issues with table upload Overall code optimization and handle streaming upload","title":"v0.2.2"},{"location":"changelog/#v019","text":"Changes to handle PyDL installation for Py2 and Py3 Removed Planet uploader to make tool more generalized","title":"v0.1.9"},{"location":"changelog/#v018","text":"Multipart encoder using requests toolbelt for streaming upload Changed manifest upload methodology to match changes in earthengine-api","title":"v0.1.8"},{"location":"changelog/#v016","text":"Fixed issue with module locations","title":"v0.1.6"},{"location":"changelog/#v015","text":"Fixed issue with gecko driver paths Fixed issue with null uploads using task, switched to ee CLI upload","title":"v0.1.5"},{"location":"changelog/#v014","text":"OS based geckdriver path fix General improvements","title":"v0.1.4"},{"location":"changelog/#v013","text":"fixed issues with extra arguments Upload issue resolved General dependency","title":"v0.1.3"},{"location":"changelog/#v011","text":"fixed dependency issues Upload post issues resolved Removed dependency on poster for now","title":"v0.1.1"},{"location":"changelog/#v009","text":"fixed attribution and dependecy issues Included poster to improve streaming uploads All uploads now use selenium","title":"v0.0.9"},{"location":"changelog/#v008","text":"fixed issues with unused imports","title":"v0.0.8"},{"location":"changelog/#v007","text":"fixed issues with manifest lib","title":"v0.0.7"},{"location":"changelog/#v006","text":"Detailed quota readout Uses selenium based uploader to upload images Avoids issues with python auth for upload","title":"v0.0.6"},{"location":"changelog/#v005","text":"Removed unnecessary library imports Minor improvements and updated readme","title":"v0.0.5"},{"location":"changelog/#v004","text":"Improved valid table name check before upload Improvements to earth engine quota tool for more accurate quota and human readable","title":"v0.0.4"},{"location":"installation/","text":"Prerequisites and Installation \u00b6 This assumes that you have native python & pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying python and then pip list geeup now only support Python v3.4 or higher from geeup version 0.3.3 This also needs earthengine cli to be installed and authenticated on your system and earthengine to be callable in your command line or terminal To install geeup: Simple CLI for Earth Engine Uploads you can install using two methods. pip install geeup or you can also try git clone https://github.com/samapriya/geeup.git cd geeup python setup.py install For Linux use sudo or try pip install geeup --user . I recommend installation within a virtual environment. Find more information on creating virtual environments here .","title":"General Installation"},{"location":"installation/#prerequisites-and-installation","text":"This assumes that you have native python & pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying python and then pip list geeup now only support Python v3.4 or higher from geeup version 0.3.3 This also needs earthengine cli to be installed and authenticated on your system and earthengine to be callable in your command line or terminal To install geeup: Simple CLI for Earth Engine Uploads you can install using two methods. pip install geeup or you can also try git clone https://github.com/samapriya/geeup.git cd geeup python setup.py install For Linux use sudo or try pip install geeup --user . I recommend installation within a virtual environment. Find more information on creating virtual environments here .","title":"Prerequisites and Installation"},{"location":"license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and \u00a9 You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"{}\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright {2021} {Samapriya Roy} Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"projects/cancel_tasks/","text":"Cancel tasks \u00b6 This is a simple tool to cancel tasks with specific controls. This allows you to cancel all tasks, all running tasks, all ready tasks or just a single task with a task id. > geeup cancel -h usage: geeup cancel [-h] --tasks TASKS optional arguments: -h, --help show this help message and exit Required named arguments.: --tasks TASKS You can provide tasks as running or pending or all or even a single task id","title":"Cancel tasks"},{"location":"projects/cancel_tasks/#cancel-tasks","text":"This is a simple tool to cancel tasks with specific controls. This allows you to cancel all tasks, all running tasks, all ready tasks or just a single task with a task id. > geeup cancel -h usage: geeup cancel [-h] --tasks TASKS optional arguments: -h, --help show this help message and exit Required named arguments.: --tasks TASKS You can provide tasks as running or pending or all or even a single task id","title":"Cancel tasks"},{"location":"projects/cookies_setup/","text":"Cookies Setup \u00b6 This method was added since v0.4.6 and uses a third party chrome extension to simply code all cookies. The chrome extension is simply the first one I found and is no way related to the project and as such I do not extend any support or warranty for it. Since is now the default method for all forms of upload since GEE disabled incompatible browser as such using selenium as a method was no longer viable. The chrome extension I am using is called Copy Cookies and you can find it here It does exactly one thing, copies cookies over and in this case we are copying over the cookies after logging into code.earthengine.google Import things to Note Open a brand browser window while you are copying cookies (do not use an incognito window as GEE does not load all cookies needed), if you have multiple GEE accounts open on the same browser the cookies being copied may create some read issues at GEE end. Clear cookies and make sure you are copying cookies from code.earthengine.google in a fresh browser instance if upload fails with a Unable to read error. Make sure you save the cookie for the same account which you initiliazed using earthengine authenticate To run cookie_setup and to parse and save cookie user geeup cookie_setup For Bash the cannonical mode will allow you to only paste upto 4095 characters and as such geeup cookie_setup might seem to fail for this use the following steps Disable cannonical mode by typing stty -icanon in terminal Then run geeup cookie_setup Once done reenable cannonical mode by typing stty icanon in terminal For mac users change default login shell from /bin/zsh to /bin/sh, the command stty -icanon works as expected, thanks to Issue 41 Since cookies generated here are post login, theoretically it should work on accounts even with two factor auth or university based Single Sign on GEE accounts but might need further testing","title":"Cookies Setup"},{"location":"projects/cookies_setup/#cookies-setup","text":"This method was added since v0.4.6 and uses a third party chrome extension to simply code all cookies. The chrome extension is simply the first one I found and is no way related to the project and as such I do not extend any support or warranty for it. Since is now the default method for all forms of upload since GEE disabled incompatible browser as such using selenium as a method was no longer viable. The chrome extension I am using is called Copy Cookies and you can find it here It does exactly one thing, copies cookies over and in this case we are copying over the cookies after logging into code.earthengine.google Import things to Note Open a brand browser window while you are copying cookies (do not use an incognito window as GEE does not load all cookies needed), if you have multiple GEE accounts open on the same browser the cookies being copied may create some read issues at GEE end. Clear cookies and make sure you are copying cookies from code.earthengine.google in a fresh browser instance if upload fails with a Unable to read error. Make sure you save the cookie for the same account which you initiliazed using earthengine authenticate To run cookie_setup and to parse and save cookie user geeup cookie_setup For Bash the cannonical mode will allow you to only paste upto 4095 characters and as such geeup cookie_setup might seem to fail for this use the following steps Disable cannonical mode by typing stty -icanon in terminal Then run geeup cookie_setup Once done reenable cannonical mode by typing stty icanon in terminal For mac users change default login shell from /bin/zsh to /bin/sh, the command stty -icanon works as expected, thanks to Issue 41 Since cookies generated here are post login, theoretically it should work on accounts even with two factor auth or university based Single Sign on GEE accounts but might need further testing","title":"Cookies Setup"},{"location":"projects/delete/","text":"Delete Assets \u00b6 The delete is recursive, meaning it will delete also all children assets: images, collections and folders. Use with caution! This tool is merely added to serve as a call to the earthengine function earthengine rm -r \"path to collection\" . > geeup delete -h usage: geeup delete [-h] --id ID optional arguments: -h, --help show this help message and exit Required named arguments.: --id ID Full path to asset for deletion. Recursively removes all folders, collections and images.","title":"Delete assets"},{"location":"projects/delete/#delete-assets","text":"The delete is recursive, meaning it will delete also all children assets: images, collections and folders. Use with caution! This tool is merely added to serve as a call to the earthengine function earthengine rm -r \"path to collection\" . > geeup delete -h usage: geeup delete [-h] --id ID optional arguments: -h, --help show this help message and exit Required named arguments.: --id ID Full path to asset for deletion. Recursively removes all folders, collections and images.","title":"Delete Assets"},{"location":"projects/ee_init/","text":"GEE authenticate \u00b6 This tool assumes that you have a Google Earth Engine account. The earthengine command line tool needs to be authenticated using a Google account. earthengine authenticate or in a terminal you can also use earthengine authenticate --quiet","title":"GEE authenticate"},{"location":"projects/ee_init/#gee-authenticate","text":"This tool assumes that you have a Google Earth Engine account. The earthengine command line tool needs to be authenticated using a Google account. earthengine authenticate or in a terminal you can also use earthengine authenticate --quiet","title":"GEE authenticate"},{"location":"projects/get_metadata/","text":"Get Metadata \u00b6 This script generates a generalized metadata using information parsed from gdalinfo and metadata properties. For now it generates metadata with image name, x and y dimension of images, and the number of bands. usage: geeup getmeta [-h] --input INPUT --metadata METADATA optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all raster files --metadata METADATA Full path to export metadata.csv file Example setup would be","title":"Get Metadata"},{"location":"projects/get_metadata/#get-metadata","text":"This script generates a generalized metadata using information parsed from gdalinfo and metadata properties. For now it generates metadata with image name, x and y dimension of images, and the number of bands. usage: geeup getmeta [-h] --input INPUT --metadata METADATA optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all raster files --metadata METADATA Full path to export metadata.csv file Example setup would be","title":"Get Metadata"},{"location":"projects/image_upload/","text":"Image Upload \u00b6 The script creates an Image Collection from GeoTIFFs in your local directory. By default, the image name in the collection is the same as the local directory name. The upload tool now allows only supports using cookies from your browser for uploads. It saves the cookie temporarily and uses it automatically till it expires when it asks you for cookie list again. For more details on cookie setup go here . Optional arguments now includes passing both Pyramiding strategy (default is set to Mean) as well as no data value. geeup upload -h usage: geeup upload [-h] --source SOURCE --dest DEST -m METADATA [--nodata NODATA] [--pyramids PYRAMIDS] [-u USER] optional arguments: -h, --help show this help message and exit Required named arguments.: --source SOURCE Path to the directory with images for upload. --dest DEST Destination. Full path for upload to Google Earth Engine image collection, e.g. users/pinkiepie/myponycollection -m METADATA, --metadata METADATA Path to CSV with metadata. -u USER, --user USER Google account name (gmail address). Optional named arguments: --nodata NODATA The value to burn into the raster as NoData (missing data) --pyramids PYRAMIDS Pyramiding Policy, MEAN, MODE, MIN, MAX, SAMPLE Example setup would be If you are using cookies for image upload setup would be geeup upload --source \"full path to folder with GeoTIFFs\" --dest \"Full path for upload to Google Earth Engine, e.g. users/pinkiepie/myponycollection\" --metadata \"Full path for metadata file.csv\" --user \"email@domain.com authenticated and used with GEE\" --nodata 0 --pyramids MODE","title":"Image Upload"},{"location":"projects/image_upload/#image-upload","text":"The script creates an Image Collection from GeoTIFFs in your local directory. By default, the image name in the collection is the same as the local directory name. The upload tool now allows only supports using cookies from your browser for uploads. It saves the cookie temporarily and uses it automatically till it expires when it asks you for cookie list again. For more details on cookie setup go here . Optional arguments now includes passing both Pyramiding strategy (default is set to Mean) as well as no data value. geeup upload -h usage: geeup upload [-h] --source SOURCE --dest DEST -m METADATA [--nodata NODATA] [--pyramids PYRAMIDS] [-u USER] optional arguments: -h, --help show this help message and exit Required named arguments.: --source SOURCE Path to the directory with images for upload. --dest DEST Destination. Full path for upload to Google Earth Engine image collection, e.g. users/pinkiepie/myponycollection -m METADATA, --metadata METADATA Path to CSV with metadata. -u USER, --user USER Google account name (gmail address). Optional named arguments: --nodata NODATA The value to burn into the raster as NoData (missing data) --pyramids PYRAMIDS Pyramiding Policy, MEAN, MODE, MIN, MAX, SAMPLE Example setup would be If you are using cookies for image upload setup would be geeup upload --source \"full path to folder with GeoTIFFs\" --dest \"Full path for upload to Google Earth Engine, e.g. users/pinkiepie/myponycollection\" --metadata \"Full path for metadata file.csv\" --user \"email@domain.com authenticated and used with GEE\" --nodata 0 --pyramids MODE","title":"Image Upload"},{"location":"projects/quota/","text":"Quota tool \u00b6 Just a simple tool to print your earth engine quota quickly. Since Google Earth Engine also allows you to use Cloud Projects instead of the standard legacy folders, this tool now has the option to pass the project path (usually projects/project-name/assets/ )","title":"Quota tool"},{"location":"projects/quota/#quota-tool","text":"Just a simple tool to print your earth engine quota quickly. Since Google Earth Engine also allows you to use Cloud Projects instead of the standard legacy folders, this tool now has the option to pass the project path (usually projects/project-name/assets/ )","title":"Quota tool"},{"location":"projects/rename/","text":"geeup Rename \u00b6 This tool is simply designed to rename filenames to confirm to GEE rules about path renaming including allowing for only hypens or underscores and letters and numbers with no spaces. The tool does do in replace replacement which means it will not create a copy but rename to the same location they are in so use with caution geeup rename -h usage: geeup rename [-h] --input INPUT optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all files to be uploaded","title":"geeup Rename"},{"location":"projects/rename/#geeup-rename","text":"This tool is simply designed to rename filenames to confirm to GEE rules about path renaming including allowing for only hypens or underscores and letters and numbers with no spaces. The tool does do in replace replacement which means it will not create a copy but rename to the same location they are in so use with caution geeup rename -h usage: geeup rename [-h] --input INPUT optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all files to be uploaded","title":"geeup Rename"},{"location":"projects/table_upload/","text":"Table Upload \u00b6 This tool allows you to batch download tables/shapefiles/CSVs to a folder. It uses a modified version of the image upload and a wrapper around the earthengine upload cli to achieve this while creating folders if they don't exist and reporting on assets and checking on uploads. This only requires a source, destination and your ee authenticated email address. The table upload tool now allows only supports using cookies from your browser for uploads. It saves the cookie temporarily and uses it automatically till it expires when it asks you for cookie list again. For more details on cookie setup go here . geeup tabup -h usage: geeup tabup [-h] --source SOURCE --dest DEST [-u USER] [--x X] [--y Y] optional arguments: -h, --help show this help message and exit Required named arguments.: --source SOURCE Path to the directory with zipped files or CSV files for upload. --dest DEST Destination. Full path for upload to Google Earth Engine folder, e.g. users/pinkiepie/myfolder -u USER, --user USER Google account name (gmail address). Optional named arguments: --x X Column with longitude value --y Y Column with latitude value Example setup If you are using cookies for table upload setup would be geeup tabup --source \"full path to folder with Zipped Shapefiles/CSV files\" --dest \"Full path for upload to Google Earth Engine, e.g. users/pinkiepie/folder\" --user \"email@domain.com authenticated and used with GEE\"","title":"Table Upload"},{"location":"projects/table_upload/#table-upload","text":"This tool allows you to batch download tables/shapefiles/CSVs to a folder. It uses a modified version of the image upload and a wrapper around the earthengine upload cli to achieve this while creating folders if they don't exist and reporting on assets and checking on uploads. This only requires a source, destination and your ee authenticated email address. The table upload tool now allows only supports using cookies from your browser for uploads. It saves the cookie temporarily and uses it automatically till it expires when it asks you for cookie list again. For more details on cookie setup go here . geeup tabup -h usage: geeup tabup [-h] --source SOURCE --dest DEST [-u USER] [--x X] [--y Y] optional arguments: -h, --help show this help message and exit Required named arguments.: --source SOURCE Path to the directory with zipped files or CSV files for upload. --dest DEST Destination. Full path for upload to Google Earth Engine folder, e.g. users/pinkiepie/myfolder -u USER, --user USER Google account name (gmail address). Optional named arguments: --x X Column with longitude value --y Y Column with latitude value Example setup If you are using cookies for table upload setup would be geeup tabup --source \"full path to folder with Zipped Shapefiles/CSV files\" --dest \"Full path for upload to Google Earth Engine, e.g. users/pinkiepie/folder\" --user \"email@domain.com authenticated and used with GEE\"","title":"Table Upload"},{"location":"projects/task_status/","text":"Task status \u00b6 This tasks tool gives a direct read out of different Earth Engine tasks across different states currently running, cancelled, pending and failed tasks and requires no arguments. However you could pass the state and get stats like SUCCEEDED along with item description or path, number of attempts and time taken along with task ID as a JSON list. This could also simply be piped into a JSON file using \">\" usage: geeup tasks [-h] [--state STATE] optional arguments: -h, --help show this help message and exit Optional named arguments: --state STATE Query by state type SUCCEEDED|PENDING|RUNNING|FAILED","title":"Task status"},{"location":"projects/task_status/#task-status","text":"This tasks tool gives a direct read out of different Earth Engine tasks across different states currently running, cancelled, pending and failed tasks and requires no arguments. However you could pass the state and get stats like SUCCEEDED along with item description or path, number of attempts and time taken along with task ID as a JSON list. This could also simply be piped into a JSON file using \">\" usage: geeup tasks [-h] [--state STATE] optional arguments: -h, --help show this help message and exit Optional named arguments: --state STATE Query by state type SUCCEEDED|PENDING|RUNNING|FAILED","title":"Task status"},{"location":"projects/zipshape/","text":"Zip Shapefiles \u00b6 So here's how table upload in Google Earth Engine works, you can either upload the component files shp, shx, prj and dbf or you can zip these files together and upload it as a single file. The pros for this is that it reduces the overall size of the shapefile after zipping them along, this tool looks for the shp file and finds the subsidiary files and zips them ready for upload. It also helps when you have limited upload bandwidth. Cons you have to create a replicate structure of the file system, but it saves on bandwidth and auto-arranges your files so you don't have to look for each additional file. usage: geeup zipshape [-h] --input INPUT --output OUTPUT optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all shape files --output OUTPUT Destination folder Full path where shp, shx, prj and dbf files if present in input will be zipped and stored Example setup would be the following","title":"Zip Shapefiles"},{"location":"projects/zipshape/#zip-shapefiles","text":"So here's how table upload in Google Earth Engine works, you can either upload the component files shp, shx, prj and dbf or you can zip these files together and upload it as a single file. The pros for this is that it reduces the overall size of the shapefile after zipping them along, this tool looks for the shp file and finds the subsidiary files and zips them ready for upload. It also helps when you have limited upload bandwidth. Cons you have to create a replicate structure of the file system, but it saves on bandwidth and auto-arranges your files so you don't have to look for each additional file. usage: geeup zipshape [-h] --input INPUT --output OUTPUT optional arguments: -h, --help show this help message and exit Required named arguments.: --input INPUT Path to the input directory with all shape files --output OUTPUT Destination folder Full path where shp, shx, prj and dbf files if present in input will be zipped and stored Example setup would be the following","title":"Zip Shapefiles"}]}